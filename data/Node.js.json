{
  "title": "Node.js",
  "content": "JavaScript runtime environment\n.mw-parser-output .infobox-subbox{padding:0;border:none;margin:-3px;width:auto;min-width:100%;font-size:100%;clear:none;float:none;background-color:transparent}.mw-parser-output .infobox-3cols-child{margin:auto}.mw-parser-output .infobox .navbar{font-size:100%}body.skin-minerva .mw-parser-output .infobox-header,body.skin-minerva .mw-parser-output .infobox-subheader,body.skin-minerva .mw-parser-output .infobox-above,body.skin-minerva .mw-parser-output .infobox-title,body.skin-minerva .mw-parser-output .infobox-image,body.skin-minerva .mw-parser-output .infobox-full-data,body.skin-minerva .mw-parser-output .infobox-below{text-align:center}html.skin-theme-clientpref-night .mw-parser-output .infobox-full-data:not(.notheme)>div:not(.notheme)[style]{background:#1f1f23!important;color:#f8f9fa}@media(prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .infobox-full-data:not(.notheme) div:not(.notheme){background:#1f1f23!important;color:#f8f9fa}}@media(min-width:640px){body.skin--responsive .mw-parser-output .infobox-table{display:table!important}body.skin--responsive .mw-parser-output .infobox-table>caption{display:table-caption!important}body.skin--responsive .mw-parser-output .infobox-table>tbody{display:table-row-group}body.skin--responsive .mw-parser-output .infobox-table tr{display:table-row!important}body.skin--responsive .mw-parser-output .infobox-table th,body.skin--responsive .mw-parser-output .infobox-table td{padding-left:inherit;padding-right:inherit}}Node.jsOriginal author(s)Ryan DahlDeveloper(s)OpenJS FoundationInitial releaseMay 27, 2009; 15 years ago (2009-05-27)[1]Stable release22.0.0[2] \n   / April 24, 2024; 3 months ago (April 24, 2024)\nRepository.mw-parser-output .plainlist ol,.mw-parser-output .plainlist ul{line-height:inherit;list-style:none;margin:0;padding:0}.mw-parser-output .plainlist ol li,.mw-parser-output .plainlist ul li{margin-bottom:0}github.com/nodejs/node \nWritten inJavaScript, C++, Python, COperating systemz/OS, Linux, macOS, Microsoft Windows, SmartOS, FreeBSD, OpenBSD, IBM AIX[3]TypeRuntime environmentLicenseMIT License[4][5]Websitenodejs.org \nNode.js is a cross-platform, open-source JavaScript runtime environment that can run on Windows, Linux, Unix, macOS, and more. Node.js runs on the V8 JavaScript engine, and executes JavaScript code outside a web browser.\nNode.js lets developers use JavaScript to write command line tools and for server-side scripting. The ability to run JavaScript code on the server is often used to generate dynamic web page content before the page is sent to the user's web browser. Consequently, Node.js represents a \"JavaScript everywhere\" paradigm,[6] unifying web-application development around a single programming language, as opposed to using different languages for the server- versus client-side programming.\nNode.js has an event-driven architecture capable of asynchronous I/O. These design choices aim to optimize throughput and scalability in web applications with many input/output operations, as well as for real-time Web applications (e.g., real-time communication programs and browser games).[7]\nThe Node.js distributed development project was previously governed by the Node.js Foundation,[8] and has now merged with the JS Foundation to form the OpenJS Foundation. OpenJS Foundation is facilitated by the Linux Foundation's Collaborative Projects program.[9]\n\n\nHistory[edit]\nRyan Dahl, creator of Node.js, in 2010\nRocket Turtle, the official mascot of Node.js since February 2024\nNode.js was initially written by Ryan Dahl in 2009,[10] about 13 years after the introduction of the first server-side JavaScript environment, Netscape's LiveWire Pro Web.[11] The initial release supported only Linux and Mac OS X. Its development and maintenance was led by Dahl and later sponsored by Joyent.[12]\nDahl criticized the limited capability of Apache HTTP Server to handle many (10,000+) concurrent connections, as well as the dominant programming paradigm of sequential programming, in which applications could block entire processes or cause the creation of multiple execution stacks for simultaneous connections.[13]\nDahl demonstrated the project at the inaugural European JSConf on November 8, 2009.[14][15][16] Node.js combined Google's V8 JavaScript engine, an event loop, and a low-level I/O API.[17]\nIn January 2010, a package manager was introduced for the Node.js environment called npm.[18] The package manager allows programmers to publish and share Node.js packages, along with the accompanying source code, and is designed to simplify the installation, update and uninstallation of packages.[17]\nIn June 2011, Microsoft and Joyent implemented a native Windows version of Node.js.[19] The first Node.js build supporting Windows was released in July 2011.\nIn January 2012, Dahl yielded management of the project to npm creator Isaac Schlueter.[20] In January 2014, Schlueter announced that Timothy J. Fontaine would lead the project.[21]\nIn December 2014, Fedor Indutny created io.js, a fork of Node.js created because of dissatisfaction with Joyent's governance as an open-governance alternative with a separate technical committee. The goal was to enable a structure that would be more receptive to community input, including the updating of io.js with the latest Google V8 JavaScript engine releases, diverging from Node.js's approach at that time.[22]\nThe Node.js Foundation, formed to reconcile Node.js and io.js under a unified banner, was announced in February 2015.[23] The merger was realized in September 2015 with Node.js v0.12 and io.js v3.3 combining into Node v4.0.[24] This merge brought V8 ES6 features into Node.js and started a long-term support release cycle.[25] By 2016, the io.js website recommended returning to Node.js and announced no further io.js releases, effectively ending the fork and solidifying the merger's success.[26]\nIn 2019, the JS Foundation and Node.js Foundation merged to form the OpenJS Foundation.\nOn September 6, 2023, Node.js 20.6.0 was released. The update brought the addition of built-in support for .env files, the unflagging of import.meta.resolve, the introduction of a new node:module API register for module customization hooks and a new initialize hook. Additionally, the module customization load hook now supports CommonJS, and Node.js C++ add-ons have gained experimental support for cppgc (Oilpan), which is a C++ garbage collection library for V8.[27]\n\nBranding[edit]\nThe Node.js logo features a green hexagon with overlapping bands to represent the cross-platform nature of the runtime.[28] The Rocket Turtle was chosen as the official Node.js mascot in February 2024 following a design contest.[29]\n\nOverview[edit]\nNode.js allows the creation of web servers and networking tools using JavaScript and a collection of \"modules\" that handle various core functionalities.[14][17][30][31][32] Modules are provided for file system I/O, networking (DNS, HTTP, TCP, TLS/SSL or UDP), binary data (buffers), cryptography functions, data streams and other core functions.[17][31][33] Node.js's modules use an API designed to reduce the complexity of writing server applications.[17][31]\nJavaScript is the only language that Node.js supports natively, but many compile-to-JS languages are available.[34] As a result, Node.js applications can be written in CoffeeScript,[35] Dart, TypeScript, ClojureScript and others.\nNode.js is primarily used to build network programs such as web servers.[30] The most significant difference between Node.js and PHP is that most functions in PHP block until completion (commands execute only after previous commands finish), while Node.js functions are non-blocking (commands execute concurrently or even in parallel,[36][37][improper synthesis?] and use callbacks to signal completion or failure).[30]\nNode.js is officially supported by Linux, macOS and Microsoft Windows 8.1 and Server 2012 (and later),[3] with Tier 2 support for SmartOS and IBM AIX and experimental support for FreeBSD. OpenBSD also works, and LTS versions are available for IBM i (AS/400).[38] The source code may also be built on similar operating systems that are not officially supported, such as NonStop OS[39] and Unix servers.\n\nPlatform architecture[edit]\nNode.js enables development of fast web servers in JavaScript using event-driven programming.[17] Developers can create scalable servers without using threading by using a simplified model that uses callbacks to signal the completion of a task.[17][page needed] Node.js connects the ease of a scripting language (JavaScript) with the power of Unix network programming.[17]\nNode.js was built on top of Google's V8 JavaScript engine since it was open-sourced under the BSD license, and it contains comprehensive support for fundamental protocols such as HTTP, DNS and TCP.[14] JavaScript's existing popularity made Node.js accessible to the web-development community.[14]\n\nIndustry support[edit]\nThere are thousands of open-source libraries for Node.js, most of which are hosted on the npm website. Multiple developer conferences and events are held that support the Node.js community, including NodeConf, Node Interactive and Node Summit, as well as a number of regional events.\nThe open-source community has developed web frameworks to accelerate the development of applications. Such frameworks include Express.js, Socket.IO, Sails.js, Next.js and Meteor.[17][40] Various packages have also been created for interfacing with other languages or runtime environments such as Microsoft .NET.[41]\nModern desktop IDEs provide editing and debugging features specifically for Node.js applications. Such IDEs include Atom, Brackets, JetBrains WebStorm,[42][43] Microsoft Visual Studio (with Node.js Tools for Visual Studio,[44] or TypeScript with Node definitions[45][46][47][48]), NetBeans,[49] Nodeclipse Enide Studio[50] (Eclipse-based) and Visual Studio Code.[51][52] Some online IDEs also support Node.js, such as Codeanywhere, Eclipse Che, Cloud9 IDE and the visual flow editor in Node-RED.\nNode.js is supported across a number of cloud-hosting platforms such as Jelastic, Google Cloud Platform, AWS Elastic Beanstalk, Azure Web Apps and Joyent.\n\nReleases[edit]\n\n\nRelease[53]\n\nStatus\n\nCode name\n\nRelease date\n\nMaintenance end\n\n\nOld version, no longer maintained: 0.10.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2013-03-11\n\n2016-10-31\n\n\nOld version, no longer maintained: 0.12.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2015-02-06\n\n2016-12-31\n\n\nOld version, no longer maintained: 4.x\n\nOld version, no longer maintained: End-of-Life\n\nArgon[54]\n\n2015-09-08\n\n2018-04-30\n\n\nOld version, no longer maintained: 5.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2015-10-29\n\n2016-06-30\n\n\nOld version, no longer maintained: 6.x\n\nOld version, no longer maintained: End-of-Life\n\nBoron[54]\n\n2016-04-26\n\n2019-04-30\n\n\nOld version, no longer maintained: 7.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2016-10-25\n\n2017-06-30\n\n\nOld version, no longer maintained: 8.x\n\nOld version, no longer maintained: End-of-Life\n\nCarbon[54]\n\n2017-05-30\n\n2019-12-31\n\n\nOld version, no longer maintained: 9.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2017-10-01\n\n2018-06-30\n\n\nOld version, no longer maintained: 10.x\n\nOld version, no longer maintained: End-of-Life\n\nDubnium[54]\n\n2018-04-24\n\n2021-04-30\n\n\nOld version, no longer maintained: 11.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2018-10-23\n\n2019-06-01\n\n\nOld version, no longer maintained: 12.x\n\nOld version, no longer maintained: End-of-Life\n\nErbium[54]\n\n2019-04-23\n\n2022-04-30\n\n\nOld version, no longer maintained: 13.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2019-10-22\n\n2020-06-01\n\n\nOld version, no longer maintained: 14.x\n\nOld version, no longer maintained: End-of-Life\n\nFermium[54]\n\n2020-04-21\n\n2023-04-30\n\n\nOld version, no longer maintained: 15.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2020-10-20\n\n2021-06-01\n\n\nOld version, no longer maintained: 16.x\n\nOld version, no longer maintained: End-of-Life\n\nGallium[54]\n\n2021-04-20\n\n2023-09-11[55]\n\n\nOld version, no longer maintained: 17.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2021-10-19\n\n2022-06-01\n\n\nOlder version, yet still maintained: 18.x\n\nOlder version, yet still maintained: Maintenance LTS\n\nHydrogen[54]\n\n2022-04-19\n\n2025-04-30\n\n\nOld version, no longer maintained: 19.x\n\nOld version, no longer maintained: End-of-Life\n\n\n\n2022-10-18\n\n2023-06-01\n\n\nOlder version, yet still maintained: 20.x\n\nOlder version, yet still maintained: Active LTS\n\nIron[56]\n\n2023-04-18\n\n2026-04-30\n\n\nOlder version, yet still maintained: 21.x\n\nOlder version, yet still maintained: Maintenance\n\n[54]\n\n2023-10-17\n\n2024-06-01\n\n\n\nCurrent stable version: 22.x\n\nCurrent stable version: Current\n\nJod [56][54]\n\n2024-04-24\n\n2027-04-30\n\n\n\nFuture release: 23.x\n\nFuture release: Planned\n\n[54]\n\n2024-10-14\n\n2025-06-01\n\n\n\nFuture release: 24.x\n\nFuture release: Planned\n\nKrypton [56]\n\n2025-04-22\n\n2028-04-30\n\n\nLegend:Old versionOlder version, still maintainedLatest versionLatest preview versionFuture release\n\nNew major releases of Node.js are cut from the GitHub main branch every six months. Even-numbered versions are cut in April and odd-numbered versions are cut in October. When a new odd version is released, the previous even version undergoes transition to Long Term Support (LTS), which gives that version 18 months of active support from the date it is designated LTS. After these 18 months expire, an LTS release receives an additional 12 months of maintenance support. An active version receives non-breaking backports of changes a few weeks after they land in the current release. A maintenance release receives only critical fixes and documentation updates.[54] The LTS Working Group manages strategy and policy in collaboration with the Technical Steering Committee of the Node.js Foundation.\n\nTechnical details[edit]\nNode.js is a JavaScript runtime environment that processes incoming requests in a loop, called the event loop.\n\nInternals[edit]\nNode.js uses libuv under the hood to handle asynchronous events. Libuv is an abstraction layer for network and file system functionality on both Windows and POSIX-based systems such as Linux, macOS, OSS on NonStop, and Unix. Node.js relies on nghttp2 for HTTP support. As of version 20, Node.js uses the ada library which provides up-to-date WHATWG URL compliance. As of version 19.5, Node.js uses the simdutf library for fast Unicode validation and transcoding. As of version 21.3, Node.js uses the simdjson library for fast JSON parsing.\n\nThreading[edit]\nNode.js operates on a single-thread event loop, using non-blocking I/O calls, allowing it to support tens of thousands of concurrent connections without incurring the cost of thread context switching.[57] The design of sharing a single thread among all the requests that use the observer pattern is intended for building highly concurrent applications, where any function performing I/O must use a callback. To accommodate the single-threaded event loop, Node.js uses the libuv library—which, in turn, uses a fixed-sized thread pool that handles some of the non-blocking asynchronous I/O operations.[7]\nA thread pool handles the execution of parallel tasks in Node.js. The main thread function call posts tasks to the shared task queue, which threads in the thread pool pull and execute. Inherently non-blocking system functions such as networking translate to kernel-side non-blocking sockets, while inherently blocking system functions such as file I/O run in a blocking way on their own threads. When a thread in the thread pool completes a task, it informs the main thread of this, which in turn, wakes up and executes the registered callback.\nA downside of this single-threaded approach is that Node.js does not allow vertical scaling by increasing the number of CPU cores of the machine it is running on without using an additional module, such as cluster,[36] StrongLoop Process Manager,[58] or pm2.[59] However, developers can increase the default number of threads in the libuv thread pool. The server operating system (OS) is likely to distribute these threads across multiple cores.[60] Another problem is that long-lasting computations and other CPU-bound tasks freeze the entire event-loop until completion.[citation needed]\n\nV8[edit]\n.mw-parser-output .hatnote{font-style:italic}.mw-parser-output div.hatnote{padding-left:1.6em;margin-bottom:0.5em}.mw-parser-output .hatnote i{font-style:normal}.mw-parser-output .hatnote+link+.hatnote{margin-top:-0.5em}@media print{body.ns-0 .mw-parser-output .hatnote{display:none!important}}Main article: V8 (JavaScript engine)\nV8 is the JavaScript execution engine which was initially built for Google Chrome. It was then open-sourced by Google in 2008. Written in C++, V8 compiles JavaScript source code to native machine code at runtime.[7] As of 2016, it also includes Ignition, a bytecode interpreter.\n\nPackage management[edit]\nnpm is the pre-installed package manager for the Node.js server platform. It installs Node.js programs from the npm registry, organizing the installation and management of third-party Node.js programs.\n\nEvent loop[edit]\nNode.js registers with the operating system so the OS notifies it of asynchronous I/O events such as new connections. Within the Node.js runtime, events trigger callbacks and each connection is handled as a small heap allocation. Traditionally, relatively heavyweight OS processes or threads handled each connection. Node.js uses an event loop for concurrent I/O, instead of processes or threads.[61] In contrast to other event-driven servers,[which?] Node.js's event loop does not need to be called explicitly. Instead, callbacks are defined, and the server automatically enters the event loop at the end of the callback definition. Node.js exits the event loop when there are no further callbacks to be performed.\n\nWebAssembly[edit]\nNode.js supports WebAssembly and as of Node 14 has experimental support of WASI, the WebAssembly System Interface.\n\nNative bindings[edit]\nSee also: Foreign function interface\nNode.js provides a way to create \"add-ons\" via a C-based API called N-API, which can be used to produce loadable (importable) .node modules from source code written in C/C++.[62] The modules can be directly loaded into memory and executed from within JS environment as simple CommonJS modules. The implementation of the N-API relies on internal C/C++ Node.js and V8 objects requiring users to import (#include) Node.js specific headers into their native source code.[62]\nAs the Node.js API is subject to breaking changes at a binary level, modules have to be built and shipped against specific Node.js versions to work properly. To address the issue, third parties have introduced open-sourced С/С++ wrappers on top of the API that partially alleviate the problem. They simplify interfaces, but as a side effect they may also introduce complexity which maintainers have to deal with. Even though the core functionality of Node.js resides in a JavaScript built-in library, modules written in C++ can be used to enhance capabilities and to improve performance of applications.\nIn order to produce such modules one needs to have an appropriate C++ compiler and necessary headers (the latter are typically shipped with Node.js itself), e.g., gcc, clang or MSVC++.\nThe N-API is similar to Java Native Interface.\n\nProject governance[edit]\nMain article: OpenJS Foundation\nIn 2015, various branches of the greater Node.js community began working under the vendor-neutral Node.js Foundation. The stated purpose of the organization \"is to enable widespread adoption and help accelerate development of Node.js and other related modules through an open governance model that encourages participation, technical contribution, and a framework for long-term stewardship by an ecosystem invested in Node.js' success.\"[63]\nThe Node.js Foundation Technical Steering Committee (TSC) is the technical governing body of the Node.js Foundation. The TSC is responsible for the core Node.js repo as well as dependent and adjacent projects. Generally the TSC delegates the administration of these projects to working groups or committees.[64] The LTS group that manages long term supported releases is one such group. Other current groups include Website, Streams, Build, Diagnostics, i18n, Evangelism, Docker, Addon API, Benchmarking, Post-mortem, Intl, Documentation, and Testing.[65]\nIn August 2017, a third of the TSC members resigned due to a dispute related to the project's code of conduct.[66]\n\n\nCurrent TSC Members[67]\n\n\nUsername\nFull Name\n\n\naduh95\nAntoine du Hamel\n\n\napapirovski\nAnatoli Papirovski\n\n\nbenjamingr\nBenjamin Gruenbaum\n\n\nBridgeAR\nRuben Bridgewater\n\n\nGeoffreyBooth\nGeoffrey Booth\n\n\ngireeshpunathil\nGireesh Punathil\n\n\njasnell\nJames M Snell\n\n\njoyeecheung\nJoyee Cheung\n\n\nlegendecas\nChengzhong Wu\n\n\nmarco-ippolito\nMarco Ippolito\n\n\nmcollina\nMatteo Collina\n\n\nmhdawson\nMichael Dawson\n\n\nMoLow\nMoshe Atlow\n\n\nRafaelGSS\nRafael Gonzaga\n\n\nrichardlau\nRichard Lau\n\n\nronag\nRobert Nagy\n\n\nruyadorno\nRuy Adorno\n\n\nShogunPanda\nPaolo Insogna\n\n\ntargos\nMichaël Zasso\n\n\ntniessen\nTobias Nießen\n\n\n\nReferences[edit]\n.mw-parser-output .reflist{font-size:90%;margin-bottom:0.5em;list-style-type:decimal}.mw-parser-output .reflist .references{font-size:100%;margin-bottom:0;list-style-type:inherit}.mw-parser-output .reflist-columns-2{column-width:30em}.mw-parser-output .reflist-columns-3{column-width:25em}.mw-parser-output .reflist-columns{margin-top:0.3em}.mw-parser-output .reflist-columns ol{margin-top:0}.mw-parser-output .reflist-columns li{page-break-inside:avoid;break-inside:avoid-column}.mw-parser-output .reflist-upper-alpha{list-style-type:upper-alpha}.mw-parser-output .reflist-upper-roman{list-style-type:upper-roman}.mw-parser-output .reflist-lower-alpha{list-style-type:lower-alpha}.mw-parser-output .reflist-lower-greek{list-style-type:lower-greek}.mw-parser-output .reflist-lower-roman{list-style-type:lower-roman}\n\n^ .mw-parser-output cite.citation{font-style:inherit;word-wrap:break-word}.mw-parser-output .citation q{quotes:\"\\\"\"\"\\\"\"\"'\"\"'\"}.mw-parser-output .citation:target{background-color:rgba(0,127,255,0.133)}.mw-parser-output .id-lock-free.id-lock-free a{background:url(\"//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg\")right 0.1em center/9px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-free a{background-size:contain}.mw-parser-output .id-lock-limited.id-lock-limited a,.mw-parser-output .id-lock-registration.id-lock-registration a{background:url(\"//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg\")right 0.1em center/9px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-limited a,body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-registration a{background-size:contain}.mw-parser-output .id-lock-subscription.id-lock-subscription a{background:url(\"//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg\")right 0.1em center/9px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .id-lock-subscription a{background-size:contain}.mw-parser-output .cs1-ws-icon a{background:url(\"//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg\")right 0.1em center/12px no-repeat}body:not(.skin-timeless):not(.skin-minerva) .mw-parser-output .cs1-ws-icon a{background-size:contain}.mw-parser-output .cs1-code{color:inherit;background:inherit;border:none;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;color:#d33}.mw-parser-output .cs1-visible-error{color:#d33}.mw-parser-output .cs1-maint{display:none;color:#2C882D;margin-left:0.3em}.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}html.skin-theme-clientpref-night .mw-parser-output .cs1-maint{color:#18911F}html.skin-theme-clientpref-night .mw-parser-output .cs1-visible-error,html.skin-theme-clientpref-night .mw-parser-output .cs1-hidden-error{color:#f8a397}@media(prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .cs1-visible-error,html.skin-theme-clientpref-os .mw-parser-output .cs1-hidden-error{color:#f8a397}html.skin-theme-clientpref-os .mw-parser-output .cs1-maint{color:#18911F}}\"node-v0.x-archive on GitHub\". GitHub. Retrieved 2 August 2014.\n\n^ \"Release 22.0.0\". 24 April 2024.\n\n^ a b \"nodejs/node\". GitHub. 13 April 2022.\n\n^ \"node/LICENSE at master\". GitHub. Node.js Foundation. 17 September 2018. Retrieved 17 September 2018.\n\n^ \"The MIT License\". Open Source Initiative. 17 September 2018. Retrieved 17 September 2018.\n\n^ gcuomo (24 October 2013). \"JavaScript Everywhere and the Three Amigos (Into the wild BLUE yonder!)\". www.ibm.com. Archived from the original on 14 November 2013. Retrieved 24 October 2013.\n\n^ a b c Laurent Orsini (7 November 2013). \"What You Need To Know About Node.js\". readwrite.com. Retrieved 6 February 2022.\n\n^ \"Node.js Foundation - Node.js\". nodejs.org. Retrieved 4 July 2015.\n\n^ \"Linux Foundation Collaborative Projects\". linuxfoundation.org. 4 July 2015. Retrieved 4 July 2015.\n\n^ \"About Node.js, and why you should add Node.js to your skill set?\". Training.com. 11 September 2016. Archived from the original on 1 April 2017. Retrieved 23 October 2016.\n\n^ Staff, CNET News (15 October 1996). \"Netscape opens intranet attack\". CNET. Retrieved 20 April 2017.\n\n^ Ryan Dahl (9 November 2010). \"Joyent and Node\". Google Groups. Retrieved 5 February 2015.\n\n^ Garbar, Dzmitry. \"PHP 7 vs Node.js? They Can Be Partners, Not Competitors For a Developer!\". belitsoft.com. Retrieved 21 December 2016.\n\n^ a b c d Sams Teach Yourself Node.js in 24 Hours, Sams Publishing, 05-Sep-2012\n\n^ Ubl, Malte (9 September 2009). \"JSConf.eu 2009, Berlin, Germany\". www.jsconf.eu. Retrieved 9 September 2009.\n\n^ \"Ryan Dahl: Original Node.js presentation\". Archived from the original on 15 December 2021 – via www.youtube.com.\n\n^ a b c d e f g h i Professional Node.js: Building JavaScript Based Scalable Software, John Wiley & Sons, 01-Oct-2012\n\n^ \"Earliest releases of npm\". GitHub. Retrieved 27 July 2016.\n\n^ Ryandahl (23 June 2011). \"Porting Node to Windows With Microsoft's Help\". nodejs.org. Retrieved 17 April 2016.\n\n^ Dahl, Ryan. \"New gatekeeper\". Retrieved 26 October 2013.\n\n^ Schlueter, Isaac (15 January 2014). \"The Next Phase of Node.js\". Retrieved 21 January 2014.\n\n^ Q&A: Why io.js decided to fork Node.js, InfoWorld Tech Watch\n\n^ \"Node.js Foundation Advances Community Collaboration, Announces New Members and Ratified Technical Governance\". Archived from the original on 24 June 2015. Retrieved 4 July 2015.\n\n^ \"Node.js Foundation Combines Node.js and io.js Into Single Codebase in New Release\". nodejs.org. 14 September 2015. Retrieved 28 January 2016.\n\n^ \"io.js and Node.js merge\". medium.com. 19 May 2015. Retrieved 27 June 2015.\n\n^ Io.js, JavaScript I/O, \"io.js has merged with the Node.js project again. There won't be any further io.js releases. All of the features in io.js are available in Node.js v4 and above.\"\n\n^ \"Previous Releases\". Node.js.\n\n^ \"Brand Guide\" (PDF). Node.js. OpenJS Foundation. Retrieved 22 March 2024.\n\n^ \"Node.JS on X: \"Meet Rocket Turtle there are many ways 👋\"\". Retrieved 22 March 2024.\n\n^ a b c Node.js for PHP Developers, O'Reilly Media, Inc., 2013\n\n^ a b c Node.js Essentials, Packt Publishing, 10-Nov-2015\n\n^ Smashing Node.js: JavaScript Everywhere, John Wiley & Sons, 14-Aug-2012\n\n^ Modules, Nodejs Website\n\n^ \"List of languages that compile to JS\". Github.\n\n^ CoffeeScript on Node.js. O'Reilly Media, Inc. 15 April 2013. ISBN 9781449316846. Retrieved 17 May 2015.\n\n^ a b \"Node.js's cluster module\". nodejs.org. Retrieved 19 October 2017.\n\n^ \"Node.js's child_process module\". nodejs.org. Retrieved 19 October 2017.\n\n^ Foundation, Node js. \"Installing Node.js via package manager\". Node.js. Retrieved 19 May 2019.\n\n^ \"bomBora - Node.js for NonStop\". infrasoft.com.au. Infrasoft. Archived from the original on 11 March 2018. Retrieved 14 August 2015.\n\n^ Express.js Guide: The Comprehensive Book on Express.js, Azat Mardan, 28-May-2014\n\n^ Edge.js bridges the gap between Node.js and .NET, TechRepublic, Tony Patton, 1 July 2014\n\n^ Node.js, WebStorm supports integration with the Node.js runtime environment, WebStorm Help\n\n^ Running and Debugging Node.js, WebStorm Help\n\n^ \"Node.js Tools for Visual Studio\". microsoft.com. Retrieved 1 February 2016.\n\n^ soywiz/typescript-node-definitions TypeScript's typings for some popular node.js modules, GitHub\n\n^ DefinitelyTyped, GitHub\n\n^ \"The repository for high quality TypeScript type definitions\". definitelytyped.org. Archived from the original on 3 February 2016.\n\n^ ImageBoard, A Node.js + Express + MongoDB application built using TypeScript on the server Archived 18 May 2019 at the Wayback Machine, TypeScript Samples\n\n^ Krill, Paul (10 November 2015). \"Node.js takes center stage in NetBeans 8.1\". infoworld.com. InfoWorld. Retrieved 10 November 2015.\n\n^ Nodeclipse, Enide -- Node.JS development in Eclipse, Nodeclipse Website\n\n^ Hello Visual Studio Code (with NodeJS), Channel 9, Microsoft\n\n^ \nNode.js Applications with VS Code, Visual Studio Code\n\n^ \"Releases\". Node.js. 23 August 2023.\n\n^ a b c d e f g h i j k l \"nodejs/Release\". GitHub. Retrieved 3 May 2018.\n\n^ Bringing forward the End-of-Life Date for Node.js 16, Node.js Website\n\n^ a b c \"Node.JS CODENAMES.md\". GitHub. Retrieved 6 September 2023.\n\n^ \"Node.js w/1M concurrent connections!\". caustik's blog. 19 August 2012.\n\n^ \"StrongLoop Process Manager\". strong-pm.io.\n\n^ \"GitHub - Unitech/pm2: Production process manager for Node.js applications with a built-in load balancer\". GitHub. 12 June 2021.\n\n^ Aleksander Kasiuk (22 April 2015). \"On problems with threads in node.js - Future Processing\".\n\n^ About Node.js, Node.js Website\n\n^ a b \"C++ addons | Node.js v14.12.0 Documentation\". nodejs.org. Retrieved 26 September 2020.\n\n^ Foundation, Node.js. \"Node.js Foundation | Node.js\". nodejs.org. Retrieved 8 March 2017.\n\n^ \"nodejs/TSC\". GitHub. Retrieved 8 March 2017.\n\n^ Foundation, Node.js. \"Working Groups | Node.js\". nodejs.org. Archived from the original on 27 February 2017. Retrieved 8 March 2017.\n\n^ Whittaker, Zack, After governance breakdown, Node.js leaders fight for its survival, ZDNet, 25 August 2017\n\n^ \"tsc-voting-members\". Github.com. 16 May 2024.\n\n\nFurther reading[edit]\nHughes-Croucher, Tom; Wilson, Mike (April 2012), Up and Running with Node.js, O'Reilly Media, ISBN 978-1-4493-9858-3\nOrnbo, George (September 2012), Sams Teach Yourself Node.js in 24 Hours, SAMS Publishing, ISBN 978-0-672-33595-2\nTeixeira, Pedro (October 2012), Professional Node.js, John Wiley & Sons, ISBN 978-1-118-22754-1\nRandal L. Schwartz and Aaron Newcomb (9 January 2013). \"Episode 237: Node.js\". twit.tv/show/floss-weekly (Podcast). TWiT.tv.  Event occurs at 1:08:13. Retrieved 9 January 2013.\nGackenheimer, Cory (October 2013), Node.js Recipes: A Problem-Solution Approach, Apress, ISBN 978-1-4302-6058-5\nExternal links[edit]\n.mw-parser-output .side-box{margin:4px 0;box-sizing:border-box;border:1px solid #aaa;font-size:88%;line-height:1.25em;background-color:var(--background-color-interactive-subtle,#f8f9fa);display:flow-root}.mw-parser-output .side-box-abovebelow,.mw-parser-output .side-box-text{padding:0.25em 0.9em}.mw-parser-output .side-box-image{padding:2px 0 2px 0.9em;text-align:center}.mw-parser-output .side-box-imageright{padding:2px 0.9em 2px 0;text-align:center}@media(min-width:500px){.mw-parser-output .side-box-flex{display:flex;align-items:center}.mw-parser-output .side-box-text{flex:1;min-width:0}}@media(min-width:720px){.mw-parser-output .side-box{width:238px}.mw-parser-output .side-box-right{clear:right;float:right;margin-left:1em}.mw-parser-output .side-box-left{margin-right:1em}}@media print{body.ns-0 .mw-parser-output .sistersitebox{display:none!important}}@media screen{html.skin-theme-clientpref-night .mw-parser-output .sistersitebox img[src*=\"Wiktionary-logo-en-v2.svg\"]{background-color:white}}@media screen and (prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .sistersitebox img[src*=\"Wiktionary-logo-en-v2.svg\"]{background-color:white}}\n\n\nWikimedia Commons has media related to Node.js.\n\nOfficial website \nnode on GitHub\n.mw-parser-output .hlist dl,.mw-parser-output .hlist ol,.mw-parser-output .hlist ul{margin:0;padding:0}.mw-parser-output .hlist dd,.mw-parser-output .hlist dt,.mw-parser-output .hlist li{margin:0;display:inline}.mw-parser-output .hlist.inline,.mw-parser-output .hlist.inline dl,.mw-parser-output .hlist.inline ol,.mw-parser-output .hlist.inline ul,.mw-parser-output .hlist dl dl,.mw-parser-output .hlist dl ol,.mw-parser-output .hlist dl ul,.mw-parser-output .hlist ol dl,.mw-parser-output .hlist ol ol,.mw-parser-output .hlist ol ul,.mw-parser-output .hlist ul dl,.mw-parser-output .hlist ul ol,.mw-parser-output .hlist ul ul{display:inline}.mw-parser-output .hlist .mw-empty-li{display:none}.mw-parser-output .hlist dt::after{content:\": \"}.mw-parser-output .hlist dd::after,.mw-parser-output .hlist li::after{content:\" · \";font-weight:bold}.mw-parser-output .hlist dd:last-child::after,.mw-parser-output .hlist dt:last-child::after,.mw-parser-output .hlist li:last-child::after{content:none}.mw-parser-output .hlist dd dd:first-child::before,.mw-parser-output .hlist dd dt:first-child::before,.mw-parser-output .hlist dd li:first-child::before,.mw-parser-output .hlist dt dd:first-child::before,.mw-parser-output .hlist dt dt:first-child::before,.mw-parser-output .hlist dt li:first-child::before,.mw-parser-output .hlist li dd:first-child::before,.mw-parser-output .hlist li dt:first-child::before,.mw-parser-output .hlist li li:first-child::before{content:\" (\";font-weight:normal}.mw-parser-output .hlist dd dd:last-child::after,.mw-parser-output .hlist dd dt:last-child::after,.mw-parser-output .hlist dd li:last-child::after,.mw-parser-output .hlist dt dd:last-child::after,.mw-parser-output .hlist dt dt:last-child::after,.mw-parser-output .hlist dt li:last-child::after,.mw-parser-output .hlist li dd:last-child::after,.mw-parser-output .hlist li dt:last-child::after,.mw-parser-output .hlist li li:last-child::after{content:\")\";font-weight:normal}.mw-parser-output .hlist ol{counter-reset:listitem}.mw-parser-output .hlist ol>li{counter-increment:listitem}.mw-parser-output .hlist ol>li::before{content:\" \"counter(listitem)\"\\a0 \"}.mw-parser-output .hlist dd ol>li:first-child::before,.mw-parser-output .hlist dt ol>li:first-child::before,.mw-parser-output .hlist li ol>li:first-child::before{content:\" (\"counter(listitem)\"\\a0 \"}.mw-parser-output .navbox{box-sizing:border-box;border:1px solid #a2a9b1;width:100%;clear:both;font-size:88%;text-align:center;padding:1px;margin:1em auto 0}.mw-parser-output .navbox .navbox{margin-top:0}.mw-parser-output .navbox+.navbox,.mw-parser-output .navbox+.navbox-styles+.navbox{margin-top:-1px}.mw-parser-output .navbox-inner,.mw-parser-output .navbox-subgroup{width:100%}.mw-parser-output .navbox-group,.mw-parser-output .navbox-title,.mw-parser-output .navbox-abovebelow{padding:0.25em 1em;line-height:1.5em;text-align:center}.mw-parser-output .navbox-group{white-space:nowrap;text-align:right}.mw-parser-output .navbox,.mw-parser-output .navbox-subgroup{background-color:#fdfdfd}.mw-parser-output .navbox-list{line-height:1.5em;border-color:#fdfdfd}.mw-parser-output .navbox-list-with-group{text-align:left;border-left-width:2px;border-left-style:solid}.mw-parser-output tr+tr>.navbox-abovebelow,.mw-parser-output tr+tr>.navbox-group,.mw-parser-output tr+tr>.navbox-image,.mw-parser-output tr+tr>.navbox-list{border-top:2px solid #fdfdfd}.mw-parser-output .navbox-title{background-color:#ccf}.mw-parser-output .navbox-abovebelow,.mw-parser-output .navbox-group,.mw-parser-output .navbox-subgroup .navbox-title{background-color:#ddf}.mw-parser-output .navbox-subgroup .navbox-group,.mw-parser-output .navbox-subgroup .navbox-abovebelow{background-color:#e6e6ff}.mw-parser-output .navbox-even{background-color:#f7f7f7}.mw-parser-output .navbox-odd{background-color:transparent}.mw-parser-output .navbox .hlist td dl,.mw-parser-output .navbox .hlist td ol,.mw-parser-output .navbox .hlist td ul,.mw-parser-output .navbox td.hlist dl,.mw-parser-output .navbox td.hlist ol,.mw-parser-output .navbox td.hlist ul{padding:0.125em 0}.mw-parser-output .navbox .navbar{display:block;font-size:100%}.mw-parser-output .navbox-title .navbar{float:left;text-align:left;margin-right:0.5em}body.skin--responsive .mw-parser-output .navbox-image img{max-width:none!important}@media print{body.ns-0 .mw-parser-output .navbox{display:none!important}}.mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.mw-parser-output .navbar-collapse{float:left;text-align:left}.mw-parser-output .navbar-boxtext{word-spacing:0}.mw-parser-output .navbar ul{display:inline-block;white-space:nowrap;line-height:inherit}.mw-parser-output .navbar-brackets::before{margin-right:-0.125em;content:\"[ \"}.mw-parser-output .navbar-brackets::after{margin-left:-0.125em;content:\" ]\"}.mw-parser-output .navbar li{word-spacing:-0.125em}.mw-parser-output .navbar a>span,.mw-parser-output .navbar a>abbr{text-decoration:inherit}.mw-parser-output .navbar-mini abbr{font-variant:small-caps;border-bottom:none;text-decoration:none;cursor:inherit}.mw-parser-output .navbar-ct-full{font-size:114%;margin:0 7em}.mw-parser-output .navbar-ct-mini{font-size:114%;margin:0 4em}html.skin-theme-clientpref-night .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}@media(prefers-color-scheme:dark){html.skin-theme-clientpref-os .mw-parser-output .navbar li a abbr{color:var(--color-base)!important}}@media print{.mw-parser-output .navbar{display:none!important}}vteNode.jsPlatform\nNode.js\nnpm\nV8\nCommonJS\nFrameworks\nMEAN\nMongoDB\nExpress.js\nAngularJS/Angular\nMEEN (substituted with Ember.js)\nBackbone.js\nMeteor\nSails.js (uses Express.js)\nNext.js\nLibraries\nLodash\nUnderscore.js\nReact.js\nVue.js\nLanguages\nJavaScript\nCoffeeScript\nTypeScript\n\nvteJavaScriptCode analysis\nESLint\nJSHint\nJSLint\nSupersets\nJS++\nTypeScript\nArkTS\nTranspilers\nAtScript\nBabel\nClojureScript\nCoffeeScript\nDart\nElm\nEmscripten\nGoogle Closure Compiler\nGoogle Web Toolkit\nHaxe\nLiveScript\nMorfik\nNim\nOpa\nPureScript\nReason\nWebSharper\nConcepts\nJavaScript library\nJavaScript syntax\nDebuggers\nChrome DevTools\nFirefox Inspector\nKomodo IDE\nMicrosoft Edge DevTools\nOpera DevTools\nSafari Web Inspector\nDoc generators\nJSDoc\nEditors (comparison)\nAce\nCloud9 IDE\nAtom\nCodeMirror\nBrackets\nLight Table\nPhpStorm\nOrion\nVisual Studio\nVisual Studio Express\nVisual Studio Code\nVisual Studio Team Services\nVim\nEngines\nList of ECMAScript engines\nFrameworks\nComparison of JavaScript frameworks\nList of JavaScript libraries\nRelated technologies\nAjax\nAssemblyScript\nasm.js\nCascading Style Sheets\nDocument Object Model\nHTML\nHTML5\nJSON\nWebAssembly\nWebAuthn\nPackage managers\nnpm\nyarn\nModule bundlers\nWebpack\nVite\nesbuild\nServer-side\nActive Server Pages\nBun\nCommonJS\nDeno\nJSGI\nNode.js\nWakanda\nUnit testing frameworks (list)\nJasmine\nJest\nMocha\nQUnit\nPeople\nDouglas Crockford\nRyan Dahl\nBrendan Eich\nJohn Resig\n\n.mw-parser-output .tooltip-dotted{border-bottom:1px dotted;cursor:help}Authority control databases: National \nGermany\nIsrael\nUnited States\nCzech Republic\n\n\n\n\n\n\n\n<img src=\"https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1\" alt=\"\" width=\"1\" height=\"1\" style=\"border: none; position: absolute;\">\nRetrieved from \"https://en.wikipedia.org/w/index.php?title=Node.js&oldid=1236147677\""
}